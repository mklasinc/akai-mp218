!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).AkaiMPD218=t()}(this,function(){"use strict";const e=[{name:"K1",note:3},{name:"K2",note:9},{name:"K3",note:12},{name:"K4",note:13}].concat((()=>new Array(16).fill(0).map((e,t)=>({name:`PAD${t+1}`,note:36+t})))());class t{constructor(e){this.name=e,this.callbacks=[]}registerCallback(e){this.callbacks.push(e)}}class s{constructor(){this.events={}}registerEvent(e){this.events[e]=new t(e)}dispatchEvent(e,t){this.events[e].callbacks.forEach(e=>e(t))}on(e,t){this.events[e].registerCallback(t)}}class n extends s{constructor(e,t){super(),this.name=e,this.note=t,this.command=null,this.velocity=0,this.registerEvent("change")}update(e,t){this.command=e,this.velocity=t,this.dispatchEvent("change",this.velocity)}change(e){this.on("change",e)}}class o extends n{constructor(e,t){super(e,t),this.type="knob"}}class i extends n{constructor(e,t){super(e,t),this.type="pad",this.registerEvent("noteOff"),this.registerEvent("noteOn")}update(e,t){super.update(e,t),137===e?this.dispatchEvent("noteOff",this.velocity):153===e&&this.dispatchEvent("noteOn",this.velocity)}noteOff(e){this.on("noteOff",e)}noteOn(e){this.on("noteOn",e)}}navigator.requestMIDIAccess||console.error("This browser does not support WebMIDI.");return class{constructor(e){this.log=e&&e.log||!1,this.initialized=!1}init(){return new Promise((t,s)=>{navigator.requestMIDIAccess||s(new Error("This browser does not support WebMIDI.")),navigator.requestMIDIAccess().then(n=>{this.log&&console.log({midiAccess:n});for(const s of n.inputs.values())s.name.includes("MPD218")&&(e.forEach(e=>{const{name:t,note:s}=e;this[t]=t.includes("PAD")?new i(t,s):new o(t,s)}),s.addEventListener("midimessage",t=>{this.log&&console.log({midiMessage:t});const[s,n,o]=t.data;this.log&&console.log({note:n,command:s,velocity:o});const i=e.find(e=>e.note===Number(n));i&&this[i.name].update(s,o)}),this.initialized=!0,t());s(new Error("MPD218 not found among your MIDI devices"))},e=>{console.log({error:e}),s(new Error("Could not access your MIDI devices."))})})}}});
